bool HTMLChecker::isValid() {
    // Obtains html openings
    stack<string> SetsOfStrings;
    // Obtains html closings
    queue<string> StringEnds;
    // Iterates until html_elements are empty
    for (;!html_elements.empty();) {

        // Removes words
        if (html_elements.front()[0]!='<')
        {
            html_elements.pop();
            continue;
        }

        // finds self closing tags
        unordered_set<string>::iterator finder = self_closing_tags.find(html_elements.front());
        if (finder != self_closing_tags.end()) {
            html_elements.pop();
            continue;
        }

        // finds closing tags
        if (html_elements.front()[1] == '/') {
            StringEnds.push(html_elements.front());
            html_elements.pop();
        }

        // finds opening tags
        if (!html_elements.empty()
        && html_elements.front()[0]=='<' && html_elements.front()[1]!='/')
        {
            SetsOfStrings.push(html_elements.front());
            html_elements.pop();
        }

        // Removes any opening and closing tags that are the same
        if (!SetsOfStrings.empty() && !StringEnds.empty())
        {
            // Check the front for the element
            if (SetsOfStrings.top()[1]==StringEnds.front()[2])
            {
                SetsOfStrings.pop();
                StringEnds.pop();
            }
            // Check the back element and swap it for popping
            else if (SetsOfStrings.top()[1]==StringEnds.back()[2])
            {
                StringEnds.front().swap(StringEnds.back());
                StringEnds.pop();
                SetsOfStrings.pop();
            }
        }
    }

    // remove the final set of opening and closing tags if any
    if (!SetsOfStrings.empty() && !StringEnds.empty())
    {
        if (SetsOfStrings.top()[1]==StringEnds.front()[2])
        {
            SetsOfStrings.pop();
            StringEnds.pop();
        }
    }

    // check if there are no more tags.
    if (SetsOfStrings.empty())
    {
        return true;
    }
    return false;
}